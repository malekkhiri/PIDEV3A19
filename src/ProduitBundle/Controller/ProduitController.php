<?php

namespace ProduitBundle\Controller;

use ProduitBundle\Entity\Produit;
use ProduitBundle\Form\Produit2Type;
use ProduitBundle\Form\Produit3Type;
use ProduitBundle\Form\ProduitType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;
use TwitterPhp\Connection\User;

class ProduitController extends Controller
{

  /*  public function AjoutAction(Request $request)
    {
        $produit=new Produit();
        $user=$this->getUser();
        if ($request->isMethod('POST'))
        {

            $produit->setNomProduit($request->get('Nom_Produit'));
            $produit->setPrix($request->get('Prix'));
            $produit->setQuantite($request->get('Quantite'));
            $produit->setDescription($request->get('Description'));
            $produit->setIdUtilisateur($user);


            $em=$this->getDoctrine()->getManager();
            $em->persist($produit);
            $em->flush();
            return $this->redirectToRoute('produit_Affichage') ;
        }

        return $this->render('ProduitBundle:Produit:Ajout.html.twig', array(
            // ...
        ));
    }*/

    public function AjoutAction(Request $request)
    {

        $produit=new Produit();
        $user=$this->getUser();
        $form = $this->createForm(ProduitType::class, $produit);
        $form->handleRequest($request);

        if ($form->isValid()) {
            // $file stores the uploaded PDF file
            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
            $file = $produit->getBrochure();
            $produit->setIdUtilisateur($user);
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('brochures_directory'),
                $fileName
            );

            // updates the 'brochure' property to store the PDF file name
            // instead of its contents
            $produit->setBrochure($fileName);

            // ... persist the $product variable or any other work
            $em = $this->getDoctrine()->getManager();//entity manager pour utiliser le persiste eet le flush
            $em->persist($produit);
            $em->flush();
            return $this->redirect($this->generateUrl('produit_Affichage'));
        }



        return $this->render('ProduitBundle:Produit:ajout.html.twig', array('p' => $form->createView()));
    }
    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
    public function AfficheAction()

    {
        $em=$this->getDoctrine()->getManager();
        $user=$this->getUser();
        $uid=$user->getId();
        $produit=$em->getRepository("ProduitBundle:Produit")->findby(['id_utilisateur'=>$uid]);

        return $this->render('ProduitBundle:Produit:affichage.html.twig', array('p'=>$produit
            // ...
        ));
    }
    public function ListAction()

    {
        $em=$this->getDoctrine()->getManager();

        $produit=$em->getRepository("ProduitBundle:Produit")->findAll();

        return $this->render('ProduitBundle:Produit:List.html.twig', array('p'=>$produit
            // ...
        ));
    }



    public function updateAction(Request $request,$id)

    {
        $id=$request->get('id');
        $em=$this->getDoctrine()->getManager();
        $produit=$em->getRepository('ProduitBundle:Produit')->find($id);


        $form=$this->createForm(Produit2Type::class,$produit);
        $form->handleRequest($request);



        if($form->isValid() && $form->isSubmitted())
        {// $file stores the uploaded PDF file
            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
            $file = $produit->getBrochure();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('brochures_directory'),
                $fileName
            );

            // updates the 'brochure' property to store the PDF file name
            // instead of its contents
            $produit->setBrochure(  $fileName);

            // ... persist the $product variable or any other work

            $em->persist($produit);
            $em->flush();
            return $this->redirectToRoute('produit_Affichage') ;
        }
        return $this->render('ProduitBundle:Produit:modifierimage.html.twig',array('p'=>$form->createView()));
    }
    public function modifierAction(Request $request, $id)

    {
        $id = $request->get('id');
        $em = $this->getDoctrine()->getManager();
        $produit = $em->getRepository('ProduitBundle:Produit')->find($id);
        $form = $this->createForm(Produit3Type::class, $produit);
        $form->handleRequest($request);
        if ($form->isValid() && $form->isSubmitted()) {
            $em->persist($produit);
            $em->flush();
            return $this->redirectToRoute('produit_Affichage');
        }
        return $this->render('ProduitBundle:Produit:modifier.html.twig', array('p' => $form->createView()));
    }

   /* public function updateAction(Request $request,$id)

    {
        $id=$request->get('id');
        $em=$this->getDoctrine()->getManager();
        $produit=$em->getRepository('ProduitBundle:Produit')->find($id);
        $form=$this->createForm(Produit3Type::class,$produit);
        $form->handleRequest($request);
        if($form->isValid() && $form->isSubmitted())
        {

            $em->persist($produit);
            $em->flush();
            return $this->redirectToRoute('produit_Affichage') ;
        }
        return $this->render('ProduitBundle:Produit:modifier.html.twig',array('p'=>$form->createView()));
    }*/

    public function supAction(Request $request,$id)

    {
        $id = $request->get('id');
        $em = $this->getDoctrine()->getManager();
        $produit = $em->getRepository('ProduitBundle:Produit')->find($id);


        $em->remove($produit);
        $em->flush();



        return $this->redirectToRoute('produit_Affichage',array());    }


    public function ListDetailleAction(Request $request,$id)

    {
        /*$id=$request->get('id');*/

        $em=$this->getDoctrine()->getManager();
        $produit=$em->getRepository("ProduitBundle:Produit")->find($id);

        return $this->render('ProduitBundle:client:AfficherProduit.html.twig', array('p'=>$produit
            // ...
        ));
    }


}
